---

- name: enable built-in redhat repos
  ansible.builtin.command: subscription-manager config --rhsm.manage_repos=1
  changed_when: true
  ignore_errors: true

- name: determine pool ids
  ansible.builtin.include_tasks: rhn_get_pool_ids.yml
  when:
    - not rhn_auto_attach
    - rhn_pool_ids is undefined or not rhn_pool_ids | length
    - rhn_api_offline_token is defined
    - rhn_subscriptions is defined or rhn_subscription is defined

- name: set rhn_auto_attach to true if no subscription name and pool id specified
  ansible.builtin.set_fact:
    rhn_auto_attach: true
  when:
    - rhn_subscriptions is undefined
    - rhn_subscription is undefined
    - rhn_pool_ids is undefined or not rhn_pool_ids | length

- name: register
  block:
    - name: register with rhn
      community.general.redhat_subscription:
        state: present
        username: "{{ rhn_username }}"
        password: "{{ rhn_password }}"
        auto_attach: "{{ rhn_auto_attach }}"
        pool_ids: "{{ _rhn_pool_ids }}"
        force_register: "{{ rhn_force_register }}"
      register: register_rhn
      until: register_rhn is success
      delay: 3
      retries: 5
      when:
        - rhn_username is defined
        - rhn_password is defined
        - (rhn_pool_ids is defined and rhn_pool_ids | length) or rhn_subscriptions is defined or rhn_subscription is defined or (rhn_auto_attach|bool)

  rescue:
    - name: clean rhn registration if available
      ansible.builtin.command: subscription-manager clean
      ignore_errors: true
      changed_when: true

    - name: register with rhn
      ansible.builtin.command: subscription-manager register --username {{ rhn_username }} --password {{ rhn_password }}
      changed_when: true
      ignore_errors: true
      no_log: true
      when:
        - rhn_username is defined
        - rhn_password is defined

    - name: auto attach subscription
      ansible.builtin.command: subscription-manager attach --auto
      ignore_errors: true
      changed_when: true
      when: rhn_auto_attach|bool

    - name: pool id
      block:
        - name: pool id
          block:
            - name: get pool ids
              ansible.builtin.shell: >
                subscription-manager list
                --all --available --matches "{{ _rhn_subscription }}"
                --pool-only | {{ rhn_pool_order }}
              register: pool_id
              until: pool_id is success
              retries: 3
              delay: 5
              ignore_errors: true
              changed_when: false
              loop: "{{ rhn_subscriptions | default([rhn_subscription]) }}"
              loop_control:
                loop_var: _rhn_subscription

            - name: set rhn_pool_ids
              ansible.builtin.set_fact:
                rhn_pool_ids: "{{ pool_id.results | map(attribute='stdout') }}"

            - name: show rhn pool ids
              ansible.builtin.debug:
                msg: "{{ rhn_pool_ids }}"
              when: rhn_pool_ids is defined
          when: rhn_pool_ids is undefined or not rhn_pool_ids

        - name: add pool
          ansible.builtin.command: subscription-manager attach --pool={{ rhn_pool_ids | join(' --pool=') }}
          register: add_pool
          until: add_pool is success
          retries: 3
          delay: 5
          ignore_errors: true
          changed_when: true
          when:
            - rhn_pool_ids is defined
            - rhn_pool_ids | length
      when:
        - not rhn_auto_attach|bool
        - rhn_subscriptions is defined or rhn_subscription is defined

- name: enable repositories
  block:
    - name: enable repositories
      community.general.rhsm_repository:
        name: "{{ repo_channels }}"
        purge: true

  rescue:
    - name: enable repositories
      ansible.builtin.command: |
        subscription-manager repos --disable "*" --enable={{ repo_channels | join(' --enable=') }}
      when: rhn_subscription is defined
      register: task_result
      until: task_result is succeeded
      retries: 3
      delay: 5
      changed_when: true

- name: ensure yum-utils package present
  ansible.builtin.yum:
    name: yum-utils
    state: present
